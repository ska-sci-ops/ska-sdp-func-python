image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - lint
  - test
  - build
  - publish
  - scan
  - pages

include:
  # For Python, only include linting and testing stages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python-lint.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python-test.gitlab-ci.yml'
#  - project: 'ska-telescope/templates-repository'
#    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'


python-lint:
  before_script:
    - apt-get update && apt-get -y install cmake
    - poetry config virtualenvs.in-project true
    - poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE
    - time poetry install

python-test:
  before_script:
    - apt-get update && apt-get -y install cmake
    - poetry config virtualenvs.in-project true
    - poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE
    - time poetry install