image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - lint
  - test
  - build
  - publish
  - scan
  - pages

include:
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

# SKAirt overrides
skairt-update:
  stage: .pre
  tags:
    - k8srunner
  before_script:
    - curl -sSL https://install.python-poetry.org | python3 -
    - time pip3 install git+https://gitlab.com/scpmw/skairt.git
    - poetry config virtualenvs.create false
  script:
    - time skairt update
    - which poetry
    - poetry --version
    - time poetry update --lock
  artifacts:
    paths:
      - poetry.lock
      - pyproject.toml

python-lint:
  before_script:
    - apt-get update && apt-get -y install cmake
    - poetry config virtualenvs.in-project true
    - poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE
    - time poetry install

python-test:
  before_script:
    - apt-get update && apt-get -y install cmake
    - poetry config virtualenvs.in-project true
    - poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE
    - time poetry install